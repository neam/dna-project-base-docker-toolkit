# Docker compose configuration for local development

# The nginx server for serving static files directly, cached contents via the memcached server and php files via the php service
web:
  image: nginx:1.7
  links:
    - php
    - memcached
  volumes:
   - .:/app:rw
  ports:
    - "80"
    - "443"
  environment:
    NGINX_ERROR_LOG_LEVEL: 'notice'
  working_dir: '/app'
  command: "/app/stack/nginx/run.sh"

# The php service for interpreting php code
php:
  #build: stack/php/image/
  image: neam/docker-stack-debian-php:5.6.7-fpm
  links:
    - memcached
  volumes:
   - .:/app
  ports:
   - "9000"
  environment:
    DISPLAY_PHP_ERRORS: 'off'
  working_dir: '/app'
  command: "/app/stack/php/run.sh"

# A container to run builder commands locally
builder:
  #build: vendor/neam/docker-stack/base-images/web-app-builder/
  image: neam/web-app-builder
  volumes:
   - .:/app
  working_dir: '/app'
  command: "true"

# A container to run worker/administration commands locally
worker:
  #build: vendor/neam/docker-stack/base-images/web-app-worker/
  image: neam/web-app-worker
  volumes:
   - .:/app
  working_dir: '/app'
  command: "true"

# A container that is linked to and thus can output linked information about running containers locally
info:
  image: phundament/app:development
  links:
    - web
    - php
    - memcached
  volumes:
   - .:/app
  working_dir: '/app'
  command: "true"

# Selenium...

# Includes a cmd to run commands defined by env vars so that administration tasks can be run by redeploying the container
#tutumworker:
#  image: debian:jessie
#  volumes:
#   - .:/app
#  environment:
#    APP_DIR: '/app'
#    WORKER_CMD: '/bin/bash echo "Hello"'
#  command: "/app/worker/run.sh"

