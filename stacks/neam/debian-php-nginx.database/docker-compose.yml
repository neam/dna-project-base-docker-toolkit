# Docker compose configuration for local development
version: '2'
services:

  # The nginx server for serving static files directly, cached contents via the memcached server and php files via the php service
  web:
    image: nginx:1.7
    links:
      - phphaproxy
      - phpfiles
    volumes:
      - .:/app:rw
    ports:
      - "80"
    environment:
      NGINX_ERROR_LOG_LEVEL: 'notice'
    working_dir: '/app'
    command: "/app/stack/nginx/run.sh"

  # HA Proxy for php service scaling
  phphaproxy:
    image: dockercloud/haproxy:1.5.1
    links:
      - phpha
    ports:
      - "9000"
      # Publish stats port
      - "1936"
    environment:
      MODE: tcp
      TIMEOUT: connect 500, client 120000, server 120000
      # Some sort of protection for the stats endpoint (needless to say, you should use a unique secure password in production)
      STATS_AUTH: stats:n3v3rg0nnAg1v3y0uup
    # Necessary for auto-scaling using Docker-for-Mac
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # The elastically scalable php service for interpreting php code without access to /files
  phpha:
    image: neam/debian-php:fpm-7.0.19-hhvm-3.x.y-for-debian-php-nginx-stack
    links:
      - mailcatcher
      - redisphpsessionhandler
      - mysql
      #- mariadb # Commented due to https://github.com/docker-library/mariadb/issues/30
      - percona
      - mongodb
    volumes:
      - .:/app:rw
    ports:
      - "9000"
      - "9089" # Xdebug
    environment:
      TCP_PORTS: '9000'
      DISPLAY_PHP_ERRORS: 'on'
      LOAD_XDEBUG_EXTENSION: '1'
      XDEBUG_DEFAULT_ENABLE: 'off'
      RUNNING_LOCALLY: '1'
      HHVM: '0' # 1 = Use HHVM instead of the default PHP interpreter
      PHP_PACKAGE_NAME_VERSION: '7.0'
    env_file:
      - .env
    working_dir: '/app'
    command: "/app/stack/php/run.sh"

  # The redis service used as the PHP session handler for all containers
  redisphpsessionhandler:
    image: redis
    ports:
     - "6379"

  # The single-node php service for interpreting php code with read-write access to user-generated files
  # (to support file uploads and other local file manipulations)
  phpfiles:
    image: neam/debian-php:fpm-7.0.19-hhvm-3.x.y-for-debian-php-nginx-stack
    links:
      - mailcatcher
      - redisphpsessionhandler
      - mysql
      #- mariadb # Commented due to https://github.com/docker-library/mariadb/issues/30
      - percona
      - mongodb
    volumes:
      - .:/app:rw
      - .files:/files:rw
    ports:
      - "9000"
      - "9089" # Xdebug
    environment:
      TCP_PORTS: '9000'
      DISPLAY_PHP_ERRORS: 'on'
      LOAD_XDEBUG_EXTENSION: '0'
      XDEBUG_DEFAULT_ENABLE: 'off'
      RUNNING_LOCALLY: '1'
      HHVM: '0' # 1 = Use HHVM instead of the default PHP interpreter
      PHP_PACKAGE_NAME_VERSION: '7.0'
    env_file:
      - .env
    working_dir: '/app'
    command: "/app/stack/php/run.sh"

  # Local MySQL database server to mimic a cloud database
  mysql:
    image: mysql:5.6.27
    volumes:
      - ./stack/mysql/.db/mysql:/var/lib/mysql:rw
      - ./stack/mysql/:/stack/mysql:rw
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: "local-mysql-pass"
    command: "/stack/mysql/run.sh"

  # Local MariaDB database server to mimic a cloud database
  mariadb:
    image: mariadb:10.1.10
    volumes:
      - ./stack/mariadb/.db/mysql:/var/lib/mysql:rw
      - ./stack/mariadb/:/stack/mariadb:rw
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: "local-mariadb-pass"
    command: "/stack/mariadb/run.sh"

  # Local Percona database server to mimic a cloud database
  percona:
    image: percona:5.6.27
    volumes:
      - ./stack/percona/.db/mysql:/var/lib/mysql:rw
      - ./stack/percona/:/stack/percona:rw
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: "local-percona-pass"
    command: "/stack/percona/run.sh"

  # Local Mongo database server to mimic a cloud database
  # NOTICE: because MongoDB uses memory mapped files it is not possible to use it through vboxsf to your host (vbox bug). // https://hub.docker.com/_/mongo/
  # Instead, the solution described on http://www.diogogmt.com/running-mongodb-with-docker-and-compose/ is used below
  mongodbdata:
    image: mongo:3.2.0
    volumes:
      - /data/db
    command: --break-mongo
  mongodb:
    image: mongo:3.2.0
    volumes_from:
      - mongodbdata
    volumes:
      - ./stack/mongodb/:/stack/mongodb:rw
    ports:
      - "27017"
    command: --smallfiles --rest --auth

  # Mailcatcher server for catching outgoing email when not in production
  mailcatcher:
    image: nisenabe/mailcatcher
    expose:
      - "25"
    ports:
      - "1080"

  # A container to run worker/administration commands locally - start a shell by running stack/shell.sh
  worker:
    image: neam/php-app-worker:0.8.0-php5
    links:
      - mysql
      - mariadb
      - percona
      - mongodb
    volumes:
      - .:/app:rw
      - .files:/files:rw
      - ../.git:/.git
      - ~/.composer:/root/.composer
      - ~/.gitconfig:/root/.gitconfig
      - ~/.ssh:/root/.ssh:ro
    environment:
      DISPLAY_PHP_ERRORS: 'off'
      LOAD_XDEBUG_EXTENSION: '1'
      XDEBUG_DEFAULT_ENABLE: 'off'
      RUNNING_LOCALLY: '1'
      HHVM: '0' # 1 = Use HHVM instead of the default PHP interpreter
      PHP_PACKAGE_NAME_VERSION: '7.0'
    working_dir: '/app'
    command: "/app/stack/php/shell.sh"
